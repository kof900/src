% \VignetteIndexEntry{Quick start guide}
% \VignettePackage{ncvreg}
% \VignetteEngine{knitr::knitr}

\documentclass{article}

\usepackage{amsmath}
\usepackage{fullpage}
\usepackage[colorlinks=true, urlcolor=blue, pdfborder={0 0 0}]{hyperref}

\title{Quick start guide for the {\tt ncvreg} package}
\author{Patrick Breheny}
\date{\today}

<<include=FALSE, purl=FALSE>>=
require(ncvreg)
require(knitr)
opts_chunk$set(background = "gray90")
opts_chunk$set(prompt = TRUE)
opts_chunk$set(comment = NA)
opts_template$set(fig = list(fig.height=4, fig.width=5, out.width='.6\\linewidth', fig.align='center'))
@

\begin{document}
\maketitle

This guide is intended to briefly demonstrate the basic usage of {\tt ncvreg}.  For more details, see the documentation for individual functions, as well as the references.

{\tt ncvreg} comes with a few example data sets; we'll look at {\tt prostate}, which has 8 features and one continuous response, \verb|prostate$lpsa|, the PSA levels (on the log scale) from men about to undergo radical prostatectomy.  The data is available as a data frame; we will turn it into a design matrix {\tt X} and response vector {\tt y} for the purpose of analysis

<<>>=
## Linear regression
data(prostate)
X <- as.matrix(prostate[,1:8])
y <- prostate$lpsa
head(X)
head(y)
@

To fit a penalized regression model to this data:

<<>>=
fit <- ncvreg(X, y)
@

The default penalty here is the minimax concave penalty (MCP), but SCAD and lasso penalties are also available.  This produces a path of coefficients, which we can plot with

<<opts.label='fig'>>=
plot(fit)
@

Notice that variables enter the model one at a time, and that at any given value of $\lambda$, several coefficients are zero.  To see what the coefficients are, we could use the {\tt coef} function:

<<opts.label='fig'>>=
coef(fit, lambda=0.1)
@

Typically, one would carry out cross-validation for the purposes of assessing the predictive accuracy of the model at various values of $\lambda$:

<<opts.label='fig'>>=
cvfit <- cv.ncvreg(X, y)
plot(cvfit)
@

The coefficients corresponding to the value of $\lambda$ that minimizes the cross-validation error can be obtained via {\tt coef}:

<<>>=
coef(cvfit)
@

Predicted values can be obtained via {\tt predict}, which has a number of options:

<<>>=
predict(cvfit, X=head(X))
predict(cvfit, type="nvars")
@

Note that the original fit (to the full data set) is returned as \verb|cvfit$fit|; it is not necessary to call both \verb|ncvreg| and {\tt cv.ncvreg} to analyze a data set.  Methods for logstic regression and Cox proportional hazards regression are also available.

\end{document}
